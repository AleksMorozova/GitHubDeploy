name: .NET Core Desktop CI + Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: ubuntu-latest

    env:
      Solution_Name: GitAction/GitAction.sln
      Test_Project_Path: GitAction/TestProject1/TestProject1.csproj
      Wap_Project_Path: GitAction/WebApplication1/WebApplication1.csproj
      Docker_Image_Name: webapp-test:${{ matrix.configuration }}
      Docker_Registry: ghcr.io
      Docker_Repository: aleksmorozova/githubdeploy
      Base64_Encoded_Pfx: ${{ secrets.Base64_Encoded_Pfx }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore NuGet packages
      run: dotnet restore ${{ env.Solution_Name }}

    - name: Build solution
      run: dotnet build ${{ env.Solution_Name }} --configuration ${{ matrix.configuration }}

    - name: Run unit tests
      run: dotnet test ${{ env.Test_Project_Path }} --configuration ${{ matrix.configuration }}

    - name: Docker Build (.NET Web App)
      run: |
        docker build \
          --build-arg CONFIGURATION=${{ matrix.configuration }} \
          -t ghcr.io/${{ env.Docker_Repository }}/webapp-test:${{ matrix.configuration }} \
          -f GitAction/Dockerfile .

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push Docker image to GitHub Container Registry
      run: docker push ghcr.io/${{ env.Docker_Repository }}/webapp-test:${{ matrix.configuration }}

    - name: Docker Run container (for verification)
      run: |
        docker run -d -p 8080:80 --name temp-runner ghcr.io/${{ env.Docker_Repository }}/webapp-test:${{ matrix.configuration }}
        sleep 10
        docker logs temp-runner || echo "No logs yet"
        docker ps

    - name: Docker Cleanup (remove temp container)
      run: |
        docker stop temp-runner || true
        docker rm temp-runner || true
